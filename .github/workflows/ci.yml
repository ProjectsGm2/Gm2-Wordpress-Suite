name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Install Node.js dependencies
        run: npm install --legacy-peer-deps

      - name: Run Composer lint
        run: composer run lint

      - name: Run ESLint
        run: npm run lint

  unit:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        php-version: ['8.0', '8.1']
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" \
          --health-interval=10s \
          --health-timeout=5s \
          --health-retries=3
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Install WordPress test suite
        env:
          DB_NAME: wordpress
          DB_USER: root
          DB_PASS: root
          DB_HOST: 127.0.0.1
          WP_VERSION: latest
        run: bash bin/install-wp-tests.sh $DB_NAME $DB_USER $DB_PASS $DB_HOST $WP_VERSION

      - name: Run PHPUnit
        run: vendor/bin/phpunit

  integration:
    runs-on: ubuntu-latest
    needs:
      - lint
      - unit
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          tools: composer

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Install Node.js dependencies
        run: npm install --legacy-peer-deps

      - name: Start WordPress environment
        run: npx wp-env start --update

      - name: Activate plugin
        run: npx wp-env run cli "wp plugin activate gm2-wordpress-suite --allow-root"

      - name: Configure test credentials
        run: |
          APP_PASSWORD=$(npx wp-env run cli "wp user application-password create admin ci-e2e --porcelain --allow-root" | tr -d '\r' | tail -n 1 | awk -F'|' '{print $NF}')
          echo "WP_AUTH=admin:${APP_PASSWORD}" >> $GITHUB_ENV
          echo "WP_BASE_URL=http://localhost:8888" >> $GITHUB_ENV

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright admin specs
        env:
          WP_BASE_URL: ${{ env.WP_BASE_URL }}
          WP_AUTH: ${{ env.WP_AUTH }}
        run: npx playwright test tests/e2e/elementor-widgets.spec.ts tests/e2e/network-payload-admin.spec.ts tests/e2e/preset-wizard.spec.ts

      - name: Stop WordPress environment
        if: always()
        run: npx wp-env stop
